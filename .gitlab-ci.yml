stages:
  - deploy
  - setup
  - publish

.docker_build: &docker
  stage: deploy
  image: docker:stable
  services:
    - docker:18-dind
  tags:
    - docker
    - privileged
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
    - if: "$CI_COMMIT_TAG"
  needs: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_NAME:latest || true
    - docker build
      --build-arg=HOST_NAME=$HOST_NAME
      --tag $IMAGE_NAME:$CI_COMMIT_REF_NAME
      --tag $IMAGE_NAME:$CI_COMMIT_SHA
      --tag $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
      --tag $IMAGE_NAME:latest
      .
    - docker push $IMAGE_NAME

language-tool:deploy:
  <<: *docker
  before_script:
    - cd language-tool || exit 1
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/language-tool
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      changes:
        - language-tool/Dockerfile
    - if: "$CI_COMMIT_TAG"

nginx:deploy:
  <<: *docker
  before_script:
    - cd nginx || exit 1
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/nginx
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      changes:
        - nginx/Dockerfile
        - nginx/nginx.conf
    - if: "$CI_COMMIT_TAG"

setup:rgb-vm: &ssh-stuff
  stage: setup
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval `ssh-agent`
    - ssh-add ~/.ssh/id_rsa
    - sed -i "s/HOST_NAME_PLACEHOLDER/${HOST_NAME}/g" ./server-configuration/hosts
  image: ghcr.io/pstoeckle/docker-images/ansible-ssh:0.1.5
  script:
    - ansible-playbook --inventory ./server-configuration/hosts --extra-vars docker_registry_user=$CI_REGISTRY_USER --extra-vars docker_registry_password=$CI_REGISTRY_PASSWORD server-configuration/pull.yml
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      changes:
        - .gitlab-ci.yml
    - when: manual
    - if: "$CI_COMMIT_TAG"

publish:rgb-vm:
  <<: *ssh-stuff
  stage: publish
  script:
    - ansible-playbook --inventory ./server-configuration/hosts server-configuration/start.yml
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: manual
    - if: "$CI_COMMIT_TAG"
      when: manual
